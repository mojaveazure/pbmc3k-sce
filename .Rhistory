library(Seurat)
library(SeuratData)
data(pbmc3k)
pbmc3k
gc()
pbmc3k <- UpdateSeuratObject(pbmc3k)
pbmc3k
?pbmc3k
usethis::use_data_raw('pbmc3k')
url <- 'http://cf.10xgenomics.com/samples/cell-exp/1.1.0/pbmc3k/pbmc3k_filtered_gene_bc_matrices.tar.gz'
tmp <- tempfile(pattern = 'pbmc3k')
if (file.exists(tmp) || dir.exists(paths = tmp)) {
unlink(x = tmp, recursive = TRUE, force = TRUE)
}
dir.create(path = tmp, showWarnings = FALSE, recursive = TRUE)
download.file(url = url, destfile = tmp)
dir.exists(tmp)
fs::fs_perms(tmp)
list.files(tmp)
list.dirs(tmp)
writeLines('hello world', file.path(tmp, 'test.txt'))
download.file(url = url, destfile = file.path(tmp, basename(url)))
untar(tarfile = file.path(tmp, basename(path = url)), exdir = tmp)
list.files(tmp)
usethis::use_package('SingleCellExperiment', 'Depends', TRUE)
gc()
data.frame(A=1:5, B=0, C=0:4, row.names=letters[1:5])
scater::readSparseCounts
library(DropletUtils)
list.files(tmp)
DropletUtils::read10xCounts(samples = file.path(tmp, 'filtered_gene_bc_matrices', 'hg19'))
colnames(sce)
sce <- DropletUtils::read10xCounts(samples = file.path(tmp, 'filtered_gene_bc_matrices', 'hg19'))
colnames(sce)
colData(sce)
colData(sce)$sample
colData(sce)$Sample
sce <- DropletUtils::read10xCounts(
samples = file.path(tmp, 'filtered_gene_bc_matrices', 'hg19'),
sample.names = 'pbmc3k',
col.names = TRUE
)
sce
pbmc3k <- DropletUtils::read10xCounts(
samples = file.path(tmp, 'filtered_gene_bc_matrices', 'hg19'),
sample.names = 'pbmc3k',
col.names = TRUE
)
pbmc3k
?pbmc3k
source("~/pbmc3k.sce/data-raw/pbmc3k.R", echo=TRUE)
gc()
source("~/pbmc3k.sce/data-raw/pbmc3k.R", echo=TRUE)
fs::file_size('data/pbmc3k.rda')
tools::resaveRdaFiles('data')
fs::file_size('data/pbmc3k.rda')
?tools::resaveRdaFiles
fs::dir_tree()
tools::resaveRdaFiles('data/pbmc3k.rda')
fs::dir_tree()
tools::checkRdaFiles('data/')
usethis::use_data(pbmc3k, overwrite = TRUE, compress = 'xz')
tools::checkRdaFiles('data/')
usethis::use_data(pbmc3k, overwrite = TRUE)
tools::checkRdaFiles('data/')
devtools::load_all()
devtools::load_all()
library(pbmc3k.sce)
library(pbmc3k.sce)
library(pbmc3k.sce)
library(pbmc3k.sce)
library(pbmc3k.sce)
library(pbmc3k.sce)
library(pbmc3k.sce)
library(pbmc3k.sce)
library(pbmc3k.sce)
library(pbmc3k.sce)
unlink('data', TRUE)
library(pbmc3k.sce)
usethis::use_r('data.R')
dir.create(file.path('man', 'macros'), recursive = TRUE)
library(pbmc3k.sce)
?pbmc3k
usethis::use_package('pkgload', 'Suggests')
library(pbmc3k.sce)
data(pbmc3k)
pbmc3k
data(pbmc3k.final)
pbmc3k.final
unlink('data', TRUE)
usethis::use_make
usethis::use_make()
library(pbmc3k.sce)
